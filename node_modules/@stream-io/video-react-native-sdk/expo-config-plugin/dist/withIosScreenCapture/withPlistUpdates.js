"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const config_plugins_1 = require("@expo/config-plugins");
const withPlistUpdates = (config) => (0, config_plugins_1.withPlugins)(config, [withAppEntitlements, withInfoPlistRTC]);
exports.default = withPlistUpdates;
// adds the app group identifier to the app's entitlements file
const withAppEntitlements = (configuration) => {
    return (0, config_plugins_1.withEntitlementsPlist)(configuration, (config) => {
        const appGroupIdentifier = `group.${config.ios
            .bundleIdentifier}.appgroup`;
        config.modResults['com.apple.security.application-groups'] = [
            appGroupIdentifier,
        ];
        return config;
    });
};
const withInfoPlistRTC = (configuration) => {
    return (0, config_plugins_1.withInfoPlist)(configuration, (config) => {
        const appGroupIdentifier = `group.${config.ios
            .bundleIdentifier}.appgroup`;
        const extensionBundleIdentifier = `${config.ios
            .bundleIdentifier}.broadcast`;
        config.modResults.RTCAppGroupIdentifier = appGroupIdentifier;
        config.modResults.RTCScreenSharingExtension = extensionBundleIdentifier;
        if (!config.modResults.UIBackgroundModes) {
            config.modResults.UIBackgroundModes = [];
        }
        if (!config.modResults.UIBackgroundModes.includes('voip')) {
            config.modResults.UIBackgroundModes.push('voip');
        }
        return config;
    });
};
