"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const config_plugins_1 = require("@expo/config-plugins");
const withStreamVideoReactNativeSDKiOSInfoPList = (configuration, props) => {
    return (0, config_plugins_1.withInfoPlist)(configuration, (config) => {
        function addBackgroundMode(mode) {
            if (!Array.isArray(config.modResults.UIBackgroundModes)) {
                config.modResults.UIBackgroundModes = [];
            }
            if (!config.modResults.UIBackgroundModes.includes(mode)) {
                config.modResults.UIBackgroundModes.push(mode);
            }
        }
        addBackgroundMode('audio');
        if (props?.ringingPushNotifications) {
            addBackgroundMode('voip');
            addBackgroundMode('fetch');
            addBackgroundMode('processing');
            config.modResults['BGTaskSchedulerPermittedIdentifiers'] = [
                '$(PRODUCT_BUNDLE_IDENTIFIER)',
            ];
        }
        if (props?.enableNonRingingPushNotifications ||
            props?.ringingPushNotifications) {
            addBackgroundMode('remote-notification');
        }
        return config;
    });
};
exports.default = withStreamVideoReactNativeSDKiOSInfoPList;
