import type { StreamVideoConfig } from './types';
import { type NewCallNotificationCallback } from '../internal/newNotificationCallbacks';
type DeepPartial<T> = {
    [P in keyof T]?: T[P] extends object ? DeepPartial<T[P]> : T[P];
};
export declare class StreamVideoRN {
    private static config;
    /**
     * Update the global config for StreamVideoRN except for push config.
     * To set push config use `StreamVideoRN.setPushConfig` instead.
     * This function accepts a partial config object that will be deeply merged with the default config.
     */
    static updateConfig(updateConfig: DeepPartial<Omit<StreamVideoConfig, 'push'>>): void;
    static updateAndroidIncomingCallChannel(updateChannel: Partial<NonNullable<StreamVideoConfig['push']>['android']['incomingCallChannel']>): void;
    /**
     * Set the push config for StreamVideoRN.
     * This method must be called **outside** of your application lifecycle, e.g. alongside your
     * `AppRegistry.registerComponent()` method call at the entry point of your application code.
     * Since the app can be opened from a dead state through a push notification
     * Note: This function must be called only once. Further calls will be ignored.
     * @example // in index.js
     * import { AppRegistry } from 'react-native';
     * import { StreamVideoRN } from '@stream-io/video-react-native-sdk';
     * import App from './App';
     * // Set push config
     * const pushConfig = {}; // construct your config
     * StreamVideoRN.setPushConfig(pushConfig);
     * AppRegistry.registerComponent('app', () => App);
     */
    static setPushConfig(pushConfig: NonNullable<StreamVideoConfig['push']>): void;
    static getConfig(): StreamVideoConfig;
    /**
     * This is the function to be called when the push token must be removed.
     * Typically used on user logout.
     */
    static onPushLogout(): Promise<void>;
    static clearPushLogoutCallbacks(): void;
    /**
     * This function is used to add a callback to be called when a new call notification is received.
     * @param callback
     * @returns Unsubscribe function
     */
    static addOnNewCallNotificationListener(callback: NewCallNotificationCallback): () => void;
}
export {};
//# sourceMappingURL=index.d.ts.map