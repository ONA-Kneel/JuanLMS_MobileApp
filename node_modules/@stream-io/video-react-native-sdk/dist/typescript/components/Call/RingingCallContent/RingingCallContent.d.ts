import React from 'react';
import { type CallContentProps } from '../CallContent';
import { type IncomingCallProps } from './IncomingCall';
import { type OutgoingCallProps } from './OutgoingCall';
import { type CallLeftIndicatorProps } from './CallLeftIndicator';
import { type CallPreparingIndicatorProps } from './CallPreparingIndicator';
/**
 * Props for the RingingCallContent component
 */
export type RingingCallContentProps = {
    /**
     * Prop to customize the IncomingCall component in the RingingCallContent.
     */
    IncomingCall?: React.ComponentType<IncomingCallProps> | null;
    /**
     * Prop to customize the OutgoingCall component in the RingingCallContent.
     */
    OutgoingCall?: React.ComponentType<OutgoingCallProps> | null;
    /**
     * Prop to customize the accepted CallContent component in the RingingCallContent. This is shown after the call is accepted.
     */
    CallContent?: React.ComponentType<CallContentProps> | null;
    /**
     * Prop to override the component shown when the call is left.
     */
    CallLeftIndicator?: React.ComponentType<CallLeftIndicatorProps> | null;
    /**
     * Prop to override the component shown when the call is in idle state.
     */
    CallPreparingIndicator?: React.ComponentType<CallPreparingIndicatorProps> | null;
    /**
     * Check if device is in landscape mode.
     * This will apply the landscape mode styles to the component.
     */
    landscape?: boolean;
    /**
     * Callback to handle the back icon press event
     * in CallLeftIndicator and CallPreparingIndicator components.
     */
    onBackPress?: () => void;
};
/**
 * Component to show the Incoming, Outgoing and CalContent component depending upon the Call states when the call is in ringing mode.
 */
export declare const RingingCallContent: (props: RingingCallContentProps) => React.JSX.Element;
//# sourceMappingURL=RingingCallContent.d.ts.map