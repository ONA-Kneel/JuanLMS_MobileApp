import React from 'react';
import { CallControlsButton } from './CallControlsButton';
/**
 * The props for the Reject Call button.
 */
type RejectCallButtonProps = {
    /**
     * Handler to be called when the accept call button is pressed.
     * @returns void
     */
    onPressHandler?: () => void;
    /**
     * Handler to be called when the reject call button is pressed.
     *
     * Note: If the `onPressHandler` is passed this handler will not be executed.
     */
    onRejectCallHandler?: () => void;
    /**
     * Sets the height, width and border-radius (half the value) of the button.
     */
    size?: React.ComponentProps<typeof CallControlsButton>['size'];
    /**
     * Optional: Reason for rejecting the call.
     * Pass a predefined or a custom reason.
     * There are four predefined reasons for rejecting the call:
      - `busy` - when the callee is busy and cannot accept the call.
      - `decline` - when the callee intentionally declines the call.
      - `cancel` - when the caller cancels the call.
      - `timeout` - when the **caller** or **callee** rejects the call after `auto_cancel_timeout_ms` or `incoming_call_timeout_ms` accordingly.
     */
    rejectReason?: string;
};
/**
 * Button to reject a call.
 *
 * Calls call.leave({ reject: true, reason: `OPTIONAL-REASON` }) internally.
 */
export declare const RejectCallButton: ({ onPressHandler, onRejectCallHandler, size, rejectReason, }: RejectCallButtonProps) => React.JSX.Element;
export {};
//# sourceMappingURL=RejectCallButton.d.ts.map