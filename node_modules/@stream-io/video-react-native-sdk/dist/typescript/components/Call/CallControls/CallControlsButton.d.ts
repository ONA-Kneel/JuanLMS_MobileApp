import React from 'react';
import { type ColorValue, type PressableProps, View } from 'react-native';
import type { Theme } from '../../../theme/theme';
interface CallControlsButtonProps {
    /**
     * `onPress` handler called when a single tap gesture is detected.
     */
    onPress?: PressableProps['onPress'];
    /**
     * The background color of the button rendered.
     */
    color?: ColorValue;
    /**
     * The background color of the disabled button.
     */
    disabledColor?: ColorValue;
    /**
     * Boolean to enable/disable the button
     */
    disabled?: boolean;
    /**
     * Style to the Pressable button.
     */
    style?: Theme['callControlsButton'];
    /**
     * Sets the height, width and border-radius (half the value) of the button.
     */
    size?: number;
    /**
     * Accessibility label for the button.
     */
    testID?: string;
    /**
     * Invoked on mount and layout changes with
     * {nativeEvent: { layout: {x, y, width, height}}}.
     */
    onLayout?: View['props']['onLayout'];
}
export declare const CallControlsButton: (props: React.PropsWithChildren<CallControlsButtonProps>) => React.JSX.Element;
export {};
//# sourceMappingURL=CallControlsButton.d.ts.map