import { StreamVideoProvider } from '@stream-io/video-react-bindings';
import React, { useEffect } from 'react';
import NetInfo from '@react-native-community/netinfo';
import { usePushRegisterEffect } from '../hooks';
import { translations } from '../translations';
import { StreamTheme } from '../contexts/ThemeContext';
import { ScreenshotIosContextProvider } from '../contexts/internal/ScreenshotIosContext';

/**
 *
 * @param props
 * @returns
 *
 * @category Client State
 */
export const StreamVideo = props => {
  const {
    client,
    children,
    translationsOverrides = translations,
    i18nInstance,
    language,
    style
  } = props;

  /**
   * Effect to inform the coordinator about the online status of the app
   */
  useEffect(() => {
    let prevIsOnline = true;
    return NetInfo.addEventListener(state => {
      const {
        isConnected,
        isInternetReachable
      } = state;
      const isOnline = isConnected === true && isInternetReachable !== false;
      if (isOnline === prevIsOnline) {
        return;
      }
      prevIsOnline = isOnline;
      const type = isOnline ? 'online' : 'offline';
      client.streamClient.updateNetworkConnectionStatus({
        type
      });
    });
  }, [client]);
  return /*#__PURE__*/React.createElement(StreamVideoProvider, {
    client: client,
    language: language,
    translationsOverrides: translationsOverrides,
    i18nInstance: i18nInstance
  }, /*#__PURE__*/React.createElement(StreamTheme, {
    style: style
  }, /*#__PURE__*/React.createElement(ScreenshotIosContextProvider, null, /*#__PURE__*/React.createElement(PushRegister, null), children)));
};

/**
 * The usePushRegisterEffect needs to be a child of StreamVideoStoreProvider
 * So we create a renderless component to use it
 */
const PushRegister = () => {
  usePushRegisterEffect();
  return null;
};
//# sourceMappingURL=StreamVideo.js.map