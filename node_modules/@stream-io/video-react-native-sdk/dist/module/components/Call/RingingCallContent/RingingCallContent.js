import { CallingState } from '@stream-io/video-client';
import { useCall, useCallStateHooks } from '@stream-io/video-react-bindings';
import React from 'react';
import { StyleSheet, View } from 'react-native';
import { CallContent as DefaultCallContent } from '../CallContent';
import { IncomingCall as DefaultIncomingCall } from './IncomingCall';
import { OutgoingCall as DefaultOutgoingCall } from './OutgoingCall';
import { CallLeftIndicator as DefaultCallLeftIndicator } from './CallLeftIndicator';
import { CallPreparingIndicator as DefaultCallPreparingIndicator } from './CallPreparingIndicator';
import { useTheme } from '../../../contexts';

/**
 * Props for the RingingCallContent component
 */

const RingingCallPanel = ({
  IncomingCall = DefaultIncomingCall,
  OutgoingCall = DefaultOutgoingCall,
  CallContent = DefaultCallContent,
  CallLeftIndicator = DefaultCallLeftIndicator,
  CallPreparingIndicator = DefaultCallPreparingIndicator,
  landscape,
  onBackPress
}) => {
  const call = useCall();
  const isCallCreatedByMe = call?.isCreatedByMe;
  const {
    useCallCallingState
  } = useCallStateHooks();
  const callingState = useCallCallingState();
  switch (callingState) {
    case CallingState.RINGING:
      return isCallCreatedByMe ? OutgoingCall && /*#__PURE__*/React.createElement(OutgoingCall, {
        landscape: landscape
      }) : IncomingCall && /*#__PURE__*/React.createElement(IncomingCall, {
        landscape: landscape
      });
    case CallingState.LEFT:
      return CallLeftIndicator && /*#__PURE__*/React.createElement(CallLeftIndicator, {
        onBackPress: onBackPress
      });
    case CallingState.IDLE:
      return CallPreparingIndicator && /*#__PURE__*/React.createElement(CallPreparingIndicator, {
        onBackPress: onBackPress
      });
    default:
      return CallContent && /*#__PURE__*/React.createElement(CallContent, {
        landscape: landscape
      });
  }
};

/**
 * Component to show the Incoming, Outgoing and CalContent component depending upon the Call states when the call is in ringing mode.
 */
export const RingingCallContent = props => {
  const {
    theme: {
      ringingCallContent
    }
  } = useTheme();
  return /*#__PURE__*/React.createElement(View, {
    style: [styles.container, ringingCallContent.container]
  }, /*#__PURE__*/React.createElement(RingingCallPanel, props));
};
const styles = StyleSheet.create({
  container: {
    ...StyleSheet.absoluteFillObject
  }
});
//# sourceMappingURL=RingingCallContent.js.map