import React from 'react';
import { StyleSheet, View, Text, Pressable } from 'react-native';
import { useTheme } from '../../../contexts/ThemeContext';
import { Back } from '../../../icons/Back';
export const TextBasedIndicator = props => {
  const {
    theme: {
      colors,
      typefaces,
      variants: {
        iconSizes
      }
    }
  } = useTheme();
  return /*#__PURE__*/React.createElement(View, {
    style: [styles.container, {
      backgroundColor: colors.sheetTertiary
    }]
  }, props.onBackPress && /*#__PURE__*/React.createElement(View, {
    style: styles.backContainer
  }, /*#__PURE__*/React.createElement(Pressable, {
    onPress: props.onBackPress,
    style: ({
      pressed
    }) => [{
      opacity: pressed ? 0.2 : 1,
      height: iconSizes.md,
      width: iconSizes.md
    }]
  }, /*#__PURE__*/React.createElement(Back, {
    color: colors.iconPrimary
  }))), /*#__PURE__*/React.createElement(View, {
    style: styles.textContainer
  }, /*#__PURE__*/React.createElement(Text, {
    style: [styles.text, {
      color: colors.textPrimary
    }, typefaces.heading6]
  }, props.text)));
};
const styles = StyleSheet.create({
  container: {
    flex: 1
  },
  backContainer: {
    padding: 8,
    paddingTop: 16
  },
  textContainer: {
    flex: 1,
    justifyContent: 'center',
    alignItems: 'center'
  },
  text: {
    fontSize: 24
  }
});
//# sourceMappingURL=TextBasedIndicator.js.map