import React from 'react';
import { OwnCapability } from '@stream-io/video-client';
import { Restricted, useCallStateHooks } from '@stream-io/video-react-bindings';
import { CallControlsButton } from './CallControlsButton';
import { IconWrapper, Mic, MicOff } from '../../../icons';
import { useTheme } from '../../../contexts/ThemeContext';

/**
 * Props for the Toggle Audio publishing button
 */

/**
 * Button to toggle audio mute/unmute status while in the call.
 */
export const ToggleAudioPublishingButton = ({
  onPressHandler
}) => {
  const {
    useMicrophoneState
  } = useCallStateHooks();
  const {
    optimisticIsMute,
    microphone
  } = useMicrophoneState();
  const {
    theme: {
      colors,
      toggleAudioPublishingButton,
      defaults
    }
  } = useTheme();
  const onPress = async () => {
    if (onPressHandler) {
      onPressHandler();
      return;
    }
    await microphone.toggle();
  };
  return /*#__PURE__*/React.createElement(Restricted, {
    requiredGrants: [OwnCapability.SEND_AUDIO]
  }, /*#__PURE__*/React.createElement(CallControlsButton, {
    onPress: onPress,
    color: !optimisticIsMute ? colors.buttonSecondary : colors.buttonWarning,
    style: toggleAudioPublishingButton
  }, /*#__PURE__*/React.createElement(IconWrapper, null, !optimisticIsMute ? /*#__PURE__*/React.createElement(Mic, {
    color: colors.iconPrimary,
    size: defaults.iconSize
  }) : /*#__PURE__*/React.createElement(MicOff, {
    color: colors.iconPrimary,
    size: defaults.iconSize
  }))));
};
//# sourceMappingURL=ToggleAudioPublishingButton.js.map