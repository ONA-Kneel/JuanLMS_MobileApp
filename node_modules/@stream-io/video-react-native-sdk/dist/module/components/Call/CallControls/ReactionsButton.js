import { Restricted } from '@stream-io/video-react-bindings';
import React, { useState } from 'react';
import { CallControlsButton } from './CallControlsButton';
import { OwnCapability } from '@stream-io/video-client';
import { ButtonTestIds } from '../../../constants/TestIds';
import { IconWrapper, Reaction } from '../../../icons';
import { ReactionsPicker } from './internal/ReactionsPicker';
import { useTheme } from '../../../contexts/ThemeContext';

/**
 * Props for the Reaction button
 */

/**
 * Button to display the list of Reactions supported in the call.
 * On press, it opens a view that can be used to send Reaction.
 */
export const ReactionsButton = ({
  supportedReactions,
  onPressHandler
}) => {
  const [showReactionsPicker, setShowReactionsPicker] = useState(false);
  const [reactionsButtonLayoutRectangle, setReactionsButtonLayoutRectangle] = useState();
  const {
    theme: {
      colors
    }
  } = useTheme();
  // This is for the reaction picker
  const onReactionsButtonLayout = event => {
    const layout = event.nativeEvent.layout;
    setReactionsButtonLayoutRectangle(prev => {
      if (prev && prev.width === layout.width && prev.height === layout.height && prev.x === layout.x && prev.y === layout.y) {
        return prev;
      }
      return layout;
    });
  };
  const reactionsButtonHandler = () => {
    if (onPressHandler) {
      onPressHandler();
      return;
    }
    setShowReactionsPicker(true);
  };
  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Restricted, {
    requiredGrants: [OwnCapability.CREATE_REACTION]
  }, /*#__PURE__*/React.createElement(CallControlsButton, {
    testID: ButtonTestIds.REACTION,
    onPress: reactionsButtonHandler,
    onLayout: onReactionsButtonLayout
  }, /*#__PURE__*/React.createElement(IconWrapper, null, /*#__PURE__*/React.createElement(Reaction, {
    color: colors.iconPrimary
  })))), showReactionsPicker && /*#__PURE__*/React.createElement(ReactionsPicker, {
    supportedReactions: supportedReactions,
    reactionsButtonLayoutRectangle: reactionsButtonLayoutRectangle,
    onRequestedClose: () => {
      setShowReactionsPicker(false);
    }
  }));
};
//# sourceMappingURL=ReactionsButton.js.map