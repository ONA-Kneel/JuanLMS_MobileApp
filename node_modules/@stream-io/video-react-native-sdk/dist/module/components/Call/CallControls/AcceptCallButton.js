import { useCall } from '@stream-io/video-react-bindings';
import { getLogger } from '@stream-io/video-client';
import React, { useState } from 'react';
import { CallControlsButton } from './CallControlsButton';
import { IconWrapper, Phone } from '../../../icons';
import { useTheme } from '../../../contexts/ThemeContext';

/**
 * The props for the Accept Call button.
 */

/**
 * Button to accept a call.
 *
 * Mostly calls call.join() internally.
 */
export const AcceptCallButton = ({
  onPressHandler,
  onAcceptCallHandler
}) => {
  const call = useCall();
  const {
    theme: {
      colors,
      variants: {
        buttonSizes,
        iconSizes
      },
      acceptCallButton
    }
  } = useTheme();
  const [isLoading, setIsLoading] = useState(false);
  const acceptCallHandler = async () => {
    setIsLoading(true);
    if (onPressHandler) {
      onPressHandler();
      return;
    }
    try {
      await call?.join();
      if (onAcceptCallHandler) {
        onAcceptCallHandler();
      }
    } catch (error) {
      const logger = getLogger(['AcceptCallButton']);
      logger('error', 'Error joining Call', error);
    } finally {
      setIsLoading(false);
    }
  };
  return /*#__PURE__*/React.createElement(CallControlsButton, {
    onPress: acceptCallHandler,
    color: colors.buttonSuccess,
    size: buttonSizes.md,
    style: acceptCallButton,
    disabled: isLoading
  }, /*#__PURE__*/React.createElement(IconWrapper, null, /*#__PURE__*/React.createElement(Phone, {
    color: colors.iconPrimary,
    size: iconSizes.lg
  })));
};
//# sourceMappingURL=AcceptCallButton.js.map