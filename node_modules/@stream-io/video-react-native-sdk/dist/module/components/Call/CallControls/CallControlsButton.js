import React from 'react';
import { Pressable, StyleSheet, View } from 'react-native';
import { useTheme } from '../../../contexts/ThemeContext';
export const CallControlsButton = props => {
  const {
    onPress,
    children,
    disabled,
    color: colorProp,
    disabledColor: disabledColorProp,
    style: styleProp,
    size,
    testID,
    onLayout
  } = props;
  const {
    theme: {
      colors,
      defaults,
      variants: {
        roundButtonSizes
      },
      callControlsButton: {
        container
      }
    }
  } = useTheme();
  const pressableStyle = ({
    pressed
  }) => [styles.container, {
    backgroundColor: disabled ? disabledColorProp || colors.buttonDisabled : colorProp || colors.buttonSecondary,
    opacity: pressed ? 0.2 : 1,
    height: size || roundButtonSizes.lg,
    width: size || roundButtonSizes.lg,
    borderRadius: defaults.borderRadius
  }, styleProp?.container ?? null, container];
  const childrenSize = (size || roundButtonSizes.lg) / 2 - 5;
  return /*#__PURE__*/React.createElement(Pressable, {
    disabled: disabled,
    style: pressableStyle,
    onPress: onPress,
    testID: testID,
    onLayout: onLayout
  }, /*#__PURE__*/React.createElement(View, {
    style: [{
      height: childrenSize,
      width: childrenSize
    }, styleProp?.svgContainer ?? null]
  }, children));
};
const styles = StyleSheet.create({
  container: {
    justifyContent: 'center',
    alignItems: 'center',
    // For android
    elevation: 6
  }
});
//# sourceMappingURL=CallControlsButton.js.map