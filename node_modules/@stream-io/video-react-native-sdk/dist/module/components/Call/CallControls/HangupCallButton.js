import React from 'react';
import { getLogger } from '@stream-io/video-client';
import { CallControlsButton } from './CallControlsButton';
import { PhoneDown } from '../../../icons';
import { ButtonTestIds } from '../../../constants/TestIds';
import { useCall, useCallStateHooks } from '@stream-io/video-react-bindings';
import { CallingState } from '@stream-io/video-client';
import { useTheme } from '../../../contexts/ThemeContext';
import { IconWrapper } from '../../../icons/IconWrapper';

/**
 * The props for the Hang up call button in the Call Controls.
 */

/**
 * Button to hangup a call.
 *
 * Mostly calls call.leave() internally.
 */
export const HangUpCallButton = ({
  size,
  onPressHandler,
  onHangupCallHandler
}) => {
  const call = useCall();
  const {
    useCallCallingState
  } = useCallStateHooks();
  const callingState = useCallCallingState();
  const {
    theme: {
      colors,
      hangupCallButton,
      variants
    }
  } = useTheme();
  const onPress = async () => {
    if (onPressHandler) {
      onPressHandler();
      return;
    }
    try {
      if (callingState === CallingState.LEFT) {
        return;
      }
      await call?.leave();
      if (onHangupCallHandler) {
        onHangupCallHandler();
      }
    } catch (error) {
      const logger = getLogger(['HangUpCallButton']);
      logger('error', 'Error leaving Call', error);
    }
  };
  return /*#__PURE__*/React.createElement(CallControlsButton, {
    onPress: onPress,
    color: colors.buttonWarning,
    style: hangupCallButton,
    size: size,
    testID: ButtonTestIds.HANG_UP_CALL
  }, /*#__PURE__*/React.createElement(IconWrapper, null, /*#__PURE__*/React.createElement(PhoneDown, {
    color: colors.iconPrimary,
    size: variants.iconSizes.md
  })));
};
//# sourceMappingURL=HangupCallButton.js.map