import React, { useMemo } from 'react';
import { StyleSheet, Text, View } from 'react-native';
import { useTheme } from '../../../contexts';
import { useCallStateHooks } from '@stream-io/video-react-bindings';
import { Eye } from '../../../icons';

/**
 * Props for the FollowerCount component.
 */

/**
 * The FollowerCount component that displays the number of participants while in the call.
 */
export const FollowerCount = ({}) => {
  const styles = useStyles();
  const {
    theme: {
      followerCount
    }
  } = useTheme();
  const {
    useParticipantCount
  } = useCallStateHooks();
  const totalParticipants = useParticipantCount();
  return /*#__PURE__*/React.createElement(View, {
    style: [styles.container, followerCount.container]
  }, /*#__PURE__*/React.createElement(View, {
    style: [styles.icon, followerCount.icon]
  }, /*#__PURE__*/React.createElement(Eye, null)), /*#__PURE__*/React.createElement(Text, {
    style: [styles.label, followerCount.label]
  }, totalParticipants));
};
const useStyles = () => {
  const {
    theme
  } = useTheme();
  return useMemo(() => StyleSheet.create({
    container: {
      paddingHorizontal: theme.variants.spacingSizes.sm,
      paddingVertical: 4,
      borderTopRightRadius: 4,
      borderBottomRightRadius: 4,
      flexDirection: 'row',
      alignItems: 'center',
      justifyContent: 'center',
      backgroundColor: theme.colors.sheetTertiary
    },
    icon: {
      height: theme.variants.iconSizes.sm,
      width: theme.variants.iconSizes.sm
    },
    label: {
      fontSize: theme.variants.fontSizes.md,
      fontWeight: '600',
      flexShrink: 1,
      textAlign: 'center',
      includeFontPadding: false,
      marginLeft: theme.variants.spacingSizes.xs,
      color: theme.colors.textPrimary
    }
  }), [theme]);
};
//# sourceMappingURL=FollowerCount.js.map