import React from 'react';
import { useTheme } from '../../../contexts/ThemeContext';
import { Platform, Pressable, StyleSheet, View } from 'react-native';
import { ScreenShare } from '../../../icons/ScreenShare';
import { StopScreenShare } from '../../../icons/StopScreenShare';
import { ScreenCapturePickerView } from '@stream-io/react-native-webrtc';
import { useScreenShareButton } from '../../../hooks/useScreenShareButton';
/**
 * The LivestreamVideoControlButton controls the screenshare stream publish/unpublish while in the livestream for the host.
 */
export const LivestreamScreenShareToggleButton = () => {
  const {
    theme: {
      colors,
      variants: {
        iconSizes,
        buttonSizes
      },
      livestreamScreenShareToggleButton
    }
  } = useTheme();
  const screenCapturePickerViewiOSRef = React.useRef(null);
  const {
    onPress,
    hasPublishedScreenShare
  } = useScreenShareButton(screenCapturePickerViewiOSRef);
  return /*#__PURE__*/React.createElement(Pressable, {
    onPress: onPress,
    style: [styles.container, {
      backgroundColor: hasPublishedScreenShare ? colors.buttonWarning : colors.buttonSecondary,
      height: buttonSizes.xs,
      width: buttonSizes.xs
    }, livestreamScreenShareToggleButton.container]
  }, /*#__PURE__*/React.createElement(View, {
    style: [styles.icon, {
      height: iconSizes.sm,
      width: iconSizes.sm
    }, livestreamScreenShareToggleButton.icon]
  }, hasPublishedScreenShare ? /*#__PURE__*/React.createElement(StopScreenShare, {
    size: iconSizes.sm,
    color: colors.iconPrimary
  }) : /*#__PURE__*/React.createElement(ScreenShare, {
    size: iconSizes.sm,
    color: colors.iconPrimary
  })), Platform.OS === 'ios' && /*#__PURE__*/React.createElement(ScreenCapturePickerView, {
    ref: screenCapturePickerViewiOSRef
  }));
};
const styles = StyleSheet.create({
  container: {
    justifyContent: 'center',
    alignItems: 'center',
    marginHorizontal: 4,
    borderRadius: 4
  },
  icon: {}
});
//# sourceMappingURL=LivestreamScreenShareToggleButton.js.map