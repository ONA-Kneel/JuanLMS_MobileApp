import React, { useEffect, useMemo } from 'react';
import { StyleSheet, Text, View } from 'react-native';
import { useCall } from '@stream-io/video-react-bindings';
import { defaultEmojiReactions, Z_INDEX } from '../../../constants';
import { useTheme } from '../../../contexts/ThemeContext';

/**
 * Props for the ParticipantReaction component.
 */

/**
 * This component is used to display the current participant reaction.
 */
export const ParticipantReaction = ({
  participant,
  supportedReactions = defaultEmojiReactions,
  hideAfterTimeoutInMs = 5500
}) => {
  const {
    reaction,
    sessionId
  } = participant;
  const call = useCall();
  const styles = useStyles();
  const {
    theme: {
      typefaces,
      participantReaction
    }
  } = useTheme();
  useEffect(() => {
    let timeoutId;
    if (call) {
      timeoutId = setTimeout(() => {
        call.resetReaction(sessionId);
      }, hideAfterTimeoutInMs);
    }
    return () => {
      clearTimeout(timeoutId);
    };
  }, [call, hideAfterTimeoutInMs, sessionId, reaction]);
  const currentReaction = reaction && supportedReactions.find(supportedReaction => supportedReaction.emoji_code === reaction.emoji_code);
  return currentReaction?.icon != null && /*#__PURE__*/React.createElement(View, {
    style: [styles.container, participantReaction.container]
  }, /*#__PURE__*/React.createElement(View, {
    style: styles.reaction
  }, /*#__PURE__*/React.createElement(Text, {
    style: [participantReaction.reaction, typefaces.heading6]
  }, currentReaction?.icon)));
};
const useStyles = () => {
  const {
    theme
  } = useTheme();
  return useMemo(() => StyleSheet.create({
    container: {
      flex: 1,
      zIndex: Z_INDEX.IN_FRONT
    },
    reaction: {
      borderRadius: theme.variants.borderRadiusSizes.sm,
      backgroundColor: theme.colors.sheetOverlay,
      alignSelf: 'flex-end',
      marginRight: theme.variants.spacingSizes.md,
      marginTop: theme.variants.spacingSizes.md,
      height: theme.variants.roundButtonSizes.md,
      width: theme.variants.roundButtonSizes.md,
      alignItems: 'center',
      justifyContent: 'center'
    }
  }), [theme]);
};
//# sourceMappingURL=ParticipantReaction.js.map