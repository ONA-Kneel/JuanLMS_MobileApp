"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.ScreenShareOverlay = void 0;
var _react = _interopRequireDefault(require("react"));
var _reactNative = require("react-native");
var _icons = require("../../icons");
var _contexts = require("../../contexts");
var _videoReactBindings = require("@stream-io/video-react-bindings");
var _videoClient = require("@stream-io/video-client");
function _interopRequireDefault(e) { return e && e.__esModule ? e : { default: e }; }
/**
 * Props for the ScreenShareOverlay component
 */

/**
 * The component that displays the screen sharing overlay, when the screen is shared.
 */
const ScreenShareOverlay = ({}) => {
  const call = (0, _videoReactBindings.useCall)();
  const {
    t
  } = (0, _videoReactBindings.useI18n)();
  const {
    theme: {
      colors,
      typefaces,
      variants: {
        iconSizes
      },
      screenshareOverlay
    }
  } = (0, _contexts.useTheme)();
  const onStopScreenshareHandler = async () => {
    await call?.stopPublish(_videoClient.SfuModels.TrackType.SCREEN_SHARE);
  };
  return /*#__PURE__*/_react.default.createElement(_reactNative.View, {
    style: [styles.container, {
      backgroundColor: colors.sheetTertiary
    }, screenshareOverlay.container]
  }, /*#__PURE__*/_react.default.createElement(_reactNative.Text, {
    style: [styles.text, typefaces.subtitleBold, {
      color: colors.textPrimary
    }, screenshareOverlay.text]
  }, t('You are sharing your screen with everyone')), /*#__PURE__*/_react.default.createElement(_reactNative.Pressable, {
    onPress: onStopScreenshareHandler,
    style: ({
      pressed
    }) => {
      return [styles.button, {
        backgroundColor: colors.sheetSecondary,
        opacity: pressed ? 0.2 : 1
      }, screenshareOverlay.button];
    }
  }, /*#__PURE__*/_react.default.createElement(_reactNative.View, {
    style: [styles.buttonIcon, {
      height: iconSizes.xs,
      width: iconSizes.xs
    }, screenshareOverlay.buttonIcon]
  }, /*#__PURE__*/_react.default.createElement(_icons.StopScreenShare, {
    size: iconSizes.xs,
    color: colors.iconPrimary
  })), /*#__PURE__*/_react.default.createElement(_reactNative.Text, {
    style: [styles.buttonText, {
      color: colors.textPrimary
    }, screenshareOverlay.buttonText]
  }, t('Stop Screen Sharing'))));
};
exports.ScreenShareOverlay = ScreenShareOverlay;
const styles = _reactNative.StyleSheet.create({
  container: {
    flex: 1,
    alignItems: 'center',
    justifyContent: 'center'
  },
  text: {},
  button: {
    marginTop: 16,
    padding: 8,
    borderRadius: 8,
    flexDirection: 'row',
    justifyContent: 'center',
    alignItems: 'center'
  },
  buttonIcon: {},
  buttonText: {
    marginLeft: 8,
    includeFontPadding: false
  }
});
//# sourceMappingURL=ScreenShareOverlay.js.map