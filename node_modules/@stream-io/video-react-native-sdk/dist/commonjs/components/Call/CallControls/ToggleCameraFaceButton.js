"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.ToggleCameraFaceButton = void 0;
var _videoClient = require("@stream-io/video-client");
var _videoReactBindings = require("@stream-io/video-react-bindings");
var _react = _interopRequireDefault(require("react"));
var _CallControlsButton = require("./CallControlsButton");
var _icons = require("../../../icons");
var _ThemeContext = require("../../../contexts/ThemeContext");
function _interopRequireDefault(e) { return e && e.__esModule ? e : { default: e }; }
/**
 * Props for the Toggle Camera face button.
 */

/**
 * Button to toggle camera face(front/back) when in the call.
 */
const ToggleCameraFaceButton = ({
  onPressHandler,
  backgroundColor
}) => {
  const {
    useCameraState,
    useCallSettings
  } = (0, _videoReactBindings.useCallStateHooks)();
  const {
    camera,
    optimisticIsMute,
    direction
  } = useCameraState();
  const callSettings = useCallSettings();
  const isVideoEnabledInCall = callSettings?.video.enabled;
  const {
    theme: {
      colors,
      toggleCameraFaceButton,
      variants
    }
  } = (0, _ThemeContext.useTheme)();
  const onPress = async () => {
    if (onPressHandler) {
      onPressHandler();
      return;
    }
    await camera.flip();
  };
  if (!isVideoEnabledInCall) {
    return;
  }
  return /*#__PURE__*/_react.default.createElement(_videoReactBindings.Restricted, {
    requiredGrants: [_videoClient.OwnCapability.SEND_VIDEO]
  }, /*#__PURE__*/_react.default.createElement(_CallControlsButton.CallControlsButton, {
    onPress: onPress,
    color: backgroundColor || colors.buttonSecondary,
    disabledColor: backgroundColor || colors.sheetSecondary,
    disabled: optimisticIsMute,
    style: toggleCameraFaceButton
  }, /*#__PURE__*/_react.default.createElement(_icons.IconWrapper, null, /*#__PURE__*/_react.default.createElement(_icons.CameraSwitch, {
    size: variants.iconSizes.md,
    color: optimisticIsMute ? colors.buttonDisabled : direction === 'front' || direction === undefined ? colors.iconPrimary : colors.buttonPrimary
  }))));
};
exports.ToggleCameraFaceButton = ToggleCameraFaceButton;
//# sourceMappingURL=ToggleCameraFaceButton.js.map