"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.ToggleVideoPreviewButton = void 0;
var _react = _interopRequireDefault(require("react"));
var _videoReactBindings = require("@stream-io/video-react-bindings");
var _contexts = require("../../../contexts");
var _CallControlsButton = require("./CallControlsButton");
var _icons = require("../../../icons");
function _interopRequireDefault(e) { return e && e.__esModule ? e : { default: e }; }
/**
 * Props for the Toggle Video preview button
 */

/**
 * Button to toggle video mute/unmute status before joining the call.
 */
const ToggleVideoPreviewButton = ({
  onPressHandler
}) => {
  const {
    theme: {
      colors,
      toggleVideoPreviewButton,
      variants: {
        buttonSizes,
        iconSizes
      }
    }
  } = (0, _contexts.useTheme)();
  const {
    useCameraState,
    useCallSettings
  } = (0, _videoReactBindings.useCallStateHooks)();
  const callSettings = useCallSettings();
  const isVideoEnabledInCall = callSettings?.video.enabled;
  const {
    optimisticIsMute,
    camera
  } = useCameraState();
  const onPress = async () => {
    if (onPressHandler) {
      onPressHandler();
      return;
    }
    await camera.toggle();
  };
  if (!isVideoEnabledInCall) {
    return;
  }
  return /*#__PURE__*/_react.default.createElement(_CallControlsButton.CallControlsButton, {
    onPress: onPress,
    color: !optimisticIsMute ? colors.buttonSecondary : colors.buttonWarning,
    size: buttonSizes.md,
    style: {
      container: toggleVideoPreviewButton.container,
      svgContainer: toggleVideoPreviewButton.svgContainer
    }
  }, /*#__PURE__*/_react.default.createElement(_icons.IconWrapper, null, !optimisticIsMute ? /*#__PURE__*/_react.default.createElement(_icons.Video, {
    color: colors.iconPrimary,
    size: iconSizes.lg
  }) : /*#__PURE__*/_react.default.createElement(_icons.VideoSlash, {
    color: colors.iconPrimary,
    size: iconSizes.lg
  })));
};
exports.ToggleVideoPreviewButton = ToggleVideoPreviewButton;
//# sourceMappingURL=ToggleVideoPreviewButton.js.map