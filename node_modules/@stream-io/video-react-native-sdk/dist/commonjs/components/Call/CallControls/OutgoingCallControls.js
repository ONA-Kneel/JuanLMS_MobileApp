"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.OutgoingCallControls = void 0;
var _react = _interopRequireDefault(require("react"));
var _reactNative = require("react-native");
var _contexts = require("../../../contexts");
var _ToggleAudioPreviewButton = require("./ToggleAudioPreviewButton");
var _ToggleVideoPreviewButton = require("./ToggleVideoPreviewButton");
var _RejectCallButton = require("./RejectCallButton");
function _interopRequireDefault(e) { return e && e.__esModule ? e : { default: e }; }
/**
 * Props for the OutgoingCallControls Component.
 */

const OutgoingCallControls = ({
  onHangupCallHandler
}) => {
  const {
    theme: {
      outgoingCall,
      variants: {
        buttonSizes
      }
    }
  } = (0, _contexts.useTheme)();
  return /*#__PURE__*/_react.default.createElement(_reactNative.View, {
    style: [styles.buttonGroup, outgoingCall.buttonGroup]
  }, /*#__PURE__*/_react.default.createElement(_reactNative.View, {
    style: [styles.deviceControlButtons, outgoingCall.deviceControlButtons]
  }, /*#__PURE__*/_react.default.createElement(_ToggleAudioPreviewButton.ToggleAudioPreviewButton, null), /*#__PURE__*/_react.default.createElement(_ToggleVideoPreviewButton.ToggleVideoPreviewButton, null)), /*#__PURE__*/_react.default.createElement(_RejectCallButton.RejectCallButton, {
    onPressHandler: onHangupCallHandler,
    size: buttonSizes.md,
    rejectReason: "cancel"
  }));
};
exports.OutgoingCallControls = OutgoingCallControls;
const styles = _reactNative.StyleSheet.create({
  buttonGroup: {
    alignItems: 'center'
  },
  deviceControlButtons: {
    width: '100%',
    flexDirection: 'row',
    justifyContent: 'space-evenly'
  }
});
//# sourceMappingURL=OutgoingCallControls.js.map