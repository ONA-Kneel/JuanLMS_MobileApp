"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.CallControls = void 0;
var _react = _interopRequireDefault(require("react"));
var _reactNative = require("react-native");
var _ToggleAudioPublishingButton = require("./ToggleAudioPublishingButton");
var _ToggleVideoPublishingButton = require("./ToggleVideoPublishingButton");
var _ToggleCameraFaceButton = require("./ToggleCameraFaceButton");
var _constants = require("../../../constants");
var _HangupCallButton = require("./HangupCallButton");
var _ThemeContext = require("../../../contexts/ThemeContext");
function _interopRequireDefault(e) { return e && e.__esModule ? e : { default: e }; }
/**
 * Props for the CallControls Component.
 */

/**
 * A list/row of controls (mute audio/video, toggle front/back camera, hangup call etc.)
 * the user can trigger within an active call.
 */
const CallControls = ({
  style,
  onHangupCallHandler,
  landscape
}) => {
  const {
    theme: {
      colors,
      callControls
    }
  } = (0, _ThemeContext.useTheme)();
  const landscapeStyles = {
    flexDirection: 'row',
    paddingHorizontal: landscape ? 12 : 0,
    paddingVertical: landscape ? 0 : 12
  };
  return /*#__PURE__*/_react.default.createElement(_reactNative.View, {
    style: [styles.container, {
      backgroundColor: colors.sheetPrimary
    }, callControls.container, landscapeStyles, style]
  }, /*#__PURE__*/_react.default.createElement(_ToggleVideoPublishingButton.ToggleVideoPublishingButton, null), /*#__PURE__*/_react.default.createElement(_ToggleAudioPublishingButton.ToggleAudioPublishingButton, null), /*#__PURE__*/_react.default.createElement(_ToggleCameraFaceButton.ToggleCameraFaceButton, null), /*#__PURE__*/_react.default.createElement(_HangupCallButton.HangUpCallButton, {
    onPressHandler: onHangupCallHandler
  }));
};
exports.CallControls = CallControls;
const styles = _reactNative.StyleSheet.create({
  container: {
    justifyContent: 'space-evenly',
    zIndex: _constants.Z_INDEX.IN_FRONT
  }
});
//# sourceMappingURL=CallControls.js.map