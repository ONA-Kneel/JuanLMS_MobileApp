"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.RingingCallContent = void 0;
var _videoClient = require("@stream-io/video-client");
var _videoReactBindings = require("@stream-io/video-react-bindings");
var _react = _interopRequireDefault(require("react"));
var _reactNative = require("react-native");
var _CallContent = require("../CallContent");
var _IncomingCall = require("./IncomingCall");
var _OutgoingCall = require("./OutgoingCall");
var _CallLeftIndicator = require("./CallLeftIndicator");
var _CallPreparingIndicator = require("./CallPreparingIndicator");
var _contexts = require("../../../contexts");
function _interopRequireDefault(e) { return e && e.__esModule ? e : { default: e }; }
/**
 * Props for the RingingCallContent component
 */

const RingingCallPanel = ({
  IncomingCall = _IncomingCall.IncomingCall,
  OutgoingCall = _OutgoingCall.OutgoingCall,
  CallContent = _CallContent.CallContent,
  CallLeftIndicator = _CallLeftIndicator.CallLeftIndicator,
  CallPreparingIndicator = _CallPreparingIndicator.CallPreparingIndicator,
  landscape,
  onBackPress
}) => {
  const call = (0, _videoReactBindings.useCall)();
  const isCallCreatedByMe = call?.isCreatedByMe;
  const {
    useCallCallingState
  } = (0, _videoReactBindings.useCallStateHooks)();
  const callingState = useCallCallingState();
  switch (callingState) {
    case _videoClient.CallingState.RINGING:
      return isCallCreatedByMe ? OutgoingCall && /*#__PURE__*/_react.default.createElement(OutgoingCall, {
        landscape: landscape
      }) : IncomingCall && /*#__PURE__*/_react.default.createElement(IncomingCall, {
        landscape: landscape
      });
    case _videoClient.CallingState.LEFT:
      return CallLeftIndicator && /*#__PURE__*/_react.default.createElement(CallLeftIndicator, {
        onBackPress: onBackPress
      });
    case _videoClient.CallingState.IDLE:
      return CallPreparingIndicator && /*#__PURE__*/_react.default.createElement(CallPreparingIndicator, {
        onBackPress: onBackPress
      });
    default:
      return CallContent && /*#__PURE__*/_react.default.createElement(CallContent, {
        landscape: landscape
      });
  }
};

/**
 * Component to show the Incoming, Outgoing and CalContent component depending upon the Call states when the call is in ringing mode.
 */
const RingingCallContent = props => {
  const {
    theme: {
      ringingCallContent
    }
  } = (0, _contexts.useTheme)();
  return /*#__PURE__*/_react.default.createElement(_reactNative.View, {
    style: [styles.container, ringingCallContent.container]
  }, /*#__PURE__*/_react.default.createElement(RingingCallPanel, props));
};
exports.RingingCallContent = RingingCallContent;
const styles = _reactNative.StyleSheet.create({
  container: {
    ..._reactNative.StyleSheet.absoluteFillObject
  }
});
//# sourceMappingURL=RingingCallContent.js.map