"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.ParticipantVideoFallback = void 0;
var _react = _interopRequireDefault(require("react"));
var _reactNative = require("react-native");
var _utility = require("../../utility");
var _ThemeContext = require("../../../contexts/ThemeContext");
function _interopRequireDefault(e) { return e && e.__esModule ? e : { default: e }; }
/**
 * Props for the ParticipantVideoFallback component.
 */

/**
 * This component is used to customize the video fallback of the participant, when the video is disabled.
 */
const ParticipantVideoFallback = ({
  participant
}) => {
  const {
    theme: {
      colors,
      typefaces,
      participantVideoFallback
    }
  } = (0, _ThemeContext.useTheme)();
  const {
    name,
    image,
    userId
  } = participant;
  const participantLabel = name ?? userId;

  // Display the Participant name/user id if the image isn't present.
  return /*#__PURE__*/_react.default.createElement(_reactNative.View, {
    style: [styles.container, {
      backgroundColor: colors.sheetTertiary
    }, participantVideoFallback.container]
  }, !image ? /*#__PURE__*/_react.default.createElement(_reactNative.Text, {
    style: [{
      color: colors.textPrimary
    }, typefaces.bodyBold, participantVideoFallback.label]
  }, participantLabel) : /*#__PURE__*/_react.default.createElement(_utility.Avatar, {
    participant: participant,
    style: {
      container: participantVideoFallback.avatarContainer,
      image: participantVideoFallback.avatarImage,
      text: participantVideoFallback.avatarText
    }
  }));
};
exports.ParticipantVideoFallback = ParticipantVideoFallback;
const styles = _reactNative.StyleSheet.create({
  container: {
    alignItems: 'center',
    justifyContent: 'center',
    ..._reactNative.StyleSheet.absoluteFillObject
  }
});
//# sourceMappingURL=ParticipantVideoFallback.js.map