"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.LivestreamScreenShareToggleButton = void 0;
var _react = _interopRequireDefault(require("react"));
var _ThemeContext = require("../../../contexts/ThemeContext");
var _reactNative = require("react-native");
var _ScreenShare = require("../../../icons/ScreenShare");
var _StopScreenShare = require("../../../icons/StopScreenShare");
var _reactNativeWebrtc = require("@stream-io/react-native-webrtc");
var _useScreenShareButton = require("../../../hooks/useScreenShareButton");
function _interopRequireDefault(e) { return e && e.__esModule ? e : { default: e }; }
/**
 * The LivestreamVideoControlButton controls the screenshare stream publish/unpublish while in the livestream for the host.
 */
const LivestreamScreenShareToggleButton = () => {
  const {
    theme: {
      colors,
      variants: {
        iconSizes,
        buttonSizes
      },
      livestreamScreenShareToggleButton
    }
  } = (0, _ThemeContext.useTheme)();
  const screenCapturePickerViewiOSRef = _react.default.useRef(null);
  const {
    onPress,
    hasPublishedScreenShare
  } = (0, _useScreenShareButton.useScreenShareButton)(screenCapturePickerViewiOSRef);
  return /*#__PURE__*/_react.default.createElement(_reactNative.Pressable, {
    onPress: onPress,
    style: [styles.container, {
      backgroundColor: hasPublishedScreenShare ? colors.buttonWarning : colors.buttonSecondary,
      height: buttonSizes.xs,
      width: buttonSizes.xs
    }, livestreamScreenShareToggleButton.container]
  }, /*#__PURE__*/_react.default.createElement(_reactNative.View, {
    style: [styles.icon, {
      height: iconSizes.sm,
      width: iconSizes.sm
    }, livestreamScreenShareToggleButton.icon]
  }, hasPublishedScreenShare ? /*#__PURE__*/_react.default.createElement(_StopScreenShare.StopScreenShare, {
    size: iconSizes.sm,
    color: colors.iconPrimary
  }) : /*#__PURE__*/_react.default.createElement(_ScreenShare.ScreenShare, {
    size: iconSizes.sm,
    color: colors.iconPrimary
  })), _reactNative.Platform.OS === 'ios' && /*#__PURE__*/_react.default.createElement(_reactNativeWebrtc.ScreenCapturePickerView, {
    ref: screenCapturePickerViewiOSRef
  }));
};
exports.LivestreamScreenShareToggleButton = LivestreamScreenShareToggleButton;
const styles = _reactNative.StyleSheet.create({
  container: {
    justifyContent: 'center',
    alignItems: 'center',
    marginHorizontal: 4,
    borderRadius: 4
  },
  icon: {}
});
//# sourceMappingURL=LivestreamScreenShareToggleButton.js.map