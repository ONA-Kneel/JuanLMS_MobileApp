"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.LivestreamVideoControlButton = void 0;
var _videoReactBindings = require("@stream-io/video-react-bindings");
var _react = _interopRequireDefault(require("react"));
var _contexts = require("../../../contexts");
var _reactNative = require("react-native");
var _icons = require("../../../icons");
function _interopRequireDefault(e) { return e && e.__esModule ? e : { default: e }; }
/**
 * The LivestreamVideoControlButton controls the video stream publish/unpublish while in the livestream for the host.
 */
const LivestreamVideoControlButton = () => {
  const {
    useCameraState,
    useCallSettings
  } = (0, _videoReactBindings.useCallStateHooks)();
  const {
    optimisticIsMute,
    camera
  } = useCameraState();
  const callSettings = useCallSettings();
  const isVideoEnabledInCall = callSettings?.video.enabled;
  const {
    theme: {
      colors,
      variants: {
        iconSizes,
        buttonSizes
      },
      livestreamVideoControlButton
    }
  } = (0, _contexts.useTheme)();
  const onPress = async () => {
    await camera.toggle();
  };
  if (!isVideoEnabledInCall) {
    return;
  }
  return /*#__PURE__*/_react.default.createElement(_reactNative.Pressable, {
    onPress: onPress,
    style: [styles.container, {
      backgroundColor: colors.buttonSecondary,
      height: buttonSizes.xs,
      width: buttonSizes.xs
    }, livestreamVideoControlButton.container]
  }, /*#__PURE__*/_react.default.createElement(_reactNative.View, {
    style: [styles.icon, {
      height: iconSizes.sm,
      width: iconSizes.sm
    }, livestreamVideoControlButton.icon]
  }, /*#__PURE__*/_react.default.createElement(_icons.IconWrapper, null, !optimisticIsMute ? /*#__PURE__*/_react.default.createElement(_icons.Video, {
    color: colors.iconPrimary,
    size: iconSizes.md
  }) : /*#__PURE__*/_react.default.createElement(_icons.VideoSlash, {
    color: colors.iconPrimary,
    size: iconSizes.md
  }))));
};
exports.LivestreamVideoControlButton = LivestreamVideoControlButton;
const styles = _reactNative.StyleSheet.create({
  container: {
    justifyContent: 'center',
    alignItems: 'center',
    marginHorizontal: 4,
    borderRadius: 4
  },
  icon: {}
});
//# sourceMappingURL=LivestreamVideoControlButton.js.map