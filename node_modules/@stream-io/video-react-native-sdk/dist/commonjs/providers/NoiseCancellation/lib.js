"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.NoiseCancellationWrapper = void 0;
exports.getNoiseCancellationLibThrowIfNotInstalled = getNoiseCancellationLibThrowIfNotInstalled;
let noiseCancellationLib;
try {
  noiseCancellationLib = require('@stream-io/noise-cancellation-react-native');
} catch {}
function getNoiseCancellationLibThrowIfNotInstalled() {
  if (!noiseCancellationLib) {
    throw Error('@stream-io/noise-cancellation-react-native is not installed. It is required for implementing noise cancellation. ');
  }
  return noiseCancellationLib;
}
class NoiseCancellationWrapper {
  constructor() {}
  static getInstance() {
    if (!this.noiseCancellationInstance) {
      const ncLib = getNoiseCancellationLibThrowIfNotInstalled();
      this.noiseCancellationInstance = new ncLib.NoiseCancellation();
    }
    return this.noiseCancellationInstance;
  }
}

/*
    IMPORTANT: must keep a failing import in a different file
    Else on commonjs, metro doesnt resolve any other modules properly in a file, if one of the module is not installed
*/
exports.NoiseCancellationWrapper = NoiseCancellationWrapper;
//# sourceMappingURL=lib.js.map