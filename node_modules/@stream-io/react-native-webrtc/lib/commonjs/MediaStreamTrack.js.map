{"version":3,"names":["_index","require","_reactNative","_EventEmitter","_Logger","_interopRequireDefault","_MediaDevices","_RTCUtil","e","__esModule","default","_defineProperty","r","t","_toPropertyKey","Object","defineProperty","value","enumerable","configurable","writable","i","_toPrimitive","Symbol","toPrimitive","call","TypeError","String","Number","log","Logger","WebRTCModule","NativeModules","MediaStreamTrack","EventTarget","constructor","info","id","kind","remote","_constraints","constraints","_enabled","enabled","_settings","settings","_muted","_peerConnectionId","peerConnectionId","_readyState","readyState","_registerEvents","_processVideoTrackDimensionChangedQueue","Boolean","mediaStreamTrackSetEnabled","muted","stop","_switchCamera","Error","deepClone","deviceId","facingMode","applyConstraints","_setVideoEffects","names","mediaStreamTrackSetVideoEffects","_setVideoEffect","name","undefined","_setMutedInternal","dispatchEvent","Event","_setVideoTrackDimensions","width","height","_setVolume","volume","mediaStreamTrackSetVolume","normalized","normalizeConstraints","video","mediaStreamTrackApplyConstraints","clone","mediaStreamTrackClone","getCapabilities","getConstraints","getSettings","addListener","ev","trackId","debug","pcId","eventData","videoTrackDimensionChangedEventQueue","get","delete","release","removeListener","mediaStreamTrackRelease","exports","proto","prototype","defineEventAttribute"],"sources":["MediaStreamTrack.ts"],"sourcesContent":["import { EventTarget, Event, defineEventAttribute } from 'event-target-shim/index';\nimport { NativeModules } from 'react-native';\n\nimport { MediaTrackConstraints } from './Constraints';\nimport { addListener, removeListener } from './EventEmitter';\nimport Logger from './Logger';\nimport { videoTrackDimensionChangedEventQueue } from './MediaDevices';\nimport { deepClone, normalizeConstraints } from './RTCUtil';\n\nconst log = new Logger('pc');\nconst { WebRTCModule } = NativeModules;\n\n\ntype MediaStreamTrackState = 'live' | 'ended';\n\nexport type MediaStreamTrackInfo = {\n    id: string;\n    kind: string;\n    remote: boolean;\n    constraints: object;\n    enabled: boolean;\n    settings: object;\n    peerConnectionId: number;\n    readyState: MediaStreamTrackState;\n}\n\nexport type MediaTrackSettings = {\n    width?: number;\n    height?: number;\n    frameRate?: number;\n    facingMode?: string;\n    deviceId?: string;\n    groupId?: string;\n}\n\ntype MediaStreamTrackEventMap = {\n    ended: Event<'ended'>;\n    mute: Event<'mute'>;\n    unmute: Event<'unmute'>;\n}\n\nexport default class MediaStreamTrack extends EventTarget<MediaStreamTrackEventMap> {\n    _constraints: MediaTrackConstraints;\n    _enabled: boolean;\n    _settings: MediaTrackSettings;\n    _muted: boolean;\n    _peerConnectionId: number;\n    _readyState: MediaStreamTrackState;\n\n    readonly id: string;\n    readonly kind: string;\n    readonly label: string = '';\n    readonly remote: boolean;\n\n    constructor(info: MediaStreamTrackInfo) {\n        super();\n\n        this.id = info.id;\n        this.kind = info.kind;\n        this.remote = info.remote;\n        this._constraints = info.constraints || {};\n        this._enabled = info.enabled;\n        this._settings = info.settings || {};\n        this._muted = false;\n        this._peerConnectionId = info.peerConnectionId;\n        this._readyState = info.readyState;\n\n        if (!this.remote) {\n            this._registerEvents();\n\n            if (this.kind === 'video') {\n                this._processVideoTrackDimensionChangedQueue();\n            }\n        }\n    }\n\n    get enabled(): boolean {\n        return this._enabled;\n    }\n\n    set enabled(enabled: boolean) {\n        if (enabled === this._enabled) {\n            return;\n        }\n\n        this._enabled = Boolean(enabled);\n\n        if (this._readyState === 'ended') {\n            return;\n        }\n\n        WebRTCModule.mediaStreamTrackSetEnabled(this.remote ? this._peerConnectionId : -1, this.id, this._enabled);\n    }\n\n    get muted(): boolean {\n        return this._muted;\n    }\n\n    get readyState(): string {\n        return this._readyState;\n    }\n\n    stop(): void {\n        this.enabled = false;\n        this._readyState = 'ended';\n    }\n\n    /**\n     * Private / custom API for switching the cameras on the fly, without the\n     * need for adding / removing tracks or doing any SDP renegotiation.\n     *\n     * This is how the reference application (AppRTCMobile) implements camera\n     * switching.\n     *\n     * @deprecated Use applyConstraints instead.\n     */\n    _switchCamera(): void {\n        if (this.remote) {\n            throw new Error('Not implemented for remote tracks');\n        }\n\n        if (this.kind !== 'video') {\n            throw new Error('Only implemented for video tracks');\n        }\n\n        const constraints = deepClone(this._settings);\n\n        delete constraints.deviceId;\n        constraints.facingMode = this._settings.facingMode === 'user' ? 'environment' : 'user';\n\n        this.applyConstraints(constraints);\n    }\n\n    _setVideoEffects(names: string[]) {\n        if (this.remote) {\n            throw new Error('Not implemented for remote tracks');\n        }\n\n        if (this.kind !== 'video') {\n            throw new Error('Only implemented for video tracks');\n        }\n\n        WebRTCModule.mediaStreamTrackSetVideoEffects(this.id, names);\n    }\n\n    _setVideoEffect(name: string | null | undefined) {\n        if (name === null || name === undefined) {\n            this._setVideoEffects([]);\n\n            return;\n        }\n\n        this._setVideoEffects([ name ]);\n    }\n\n    /**\n     * Internal function which is used to set the muted state on remote tracks and\n     * emit the mute / unmute event.\n     *\n     * @param muted Whether the track should be marked as muted / unmuted.\n     */\n    _setMutedInternal(muted: boolean) {\n        if (!this.remote) {\n            throw new Error('Track is not remote!');\n        }\n\n        this._muted = muted;\n        this.dispatchEvent(new Event(muted ? 'mute' : 'unmute'));\n    }\n\n    /**\n     * Internal function which is used to set the video dimensions on video tracks.\n     *\n     * @param width The new width of the video track.\n     * @param height The new height of the video track.\n     */\n    _setVideoTrackDimensions(width: number, height: number) {\n        if (this.kind !== 'video') {\n            throw new Error('Only implemented for video tracks');\n        }\n\n        this._settings = {\n            ...this._settings,\n            width,\n            height\n        };\n    }\n\n    /**\n     * Custom API for setting the volume on an individual audio track.\n     *\n     * @param volume a gain value in the range of 0-10. defaults to 1.0\n     */\n    _setVolume(volume: number) {\n        if (this.kind !== 'audio') {\n            throw new Error('Only implemented for audio tracks');\n        }\n\n        WebRTCModule.mediaStreamTrackSetVolume(this.remote ? this._peerConnectionId : -1, this.id, volume);\n    }\n\n    /**\n     * Applies a new set of constraints to the track.\n     *\n     * @param constraints An object listing the constraints\n     * to apply to the track's constrainable properties; any existing\n     * constraints are replaced with the new values specified, and any\n     * constrainable properties not included are restored to their default\n     * constraints. If this parameter is omitted, all currently set custom\n     * constraints are cleared.\n     */\n    async applyConstraints(constraints?: MediaTrackConstraints): Promise<void> {\n        if (this.kind !== 'video') {\n            throw new Error('Only implemented for video tracks');\n        }\n\n        const normalized = normalizeConstraints({ video: constraints ?? true });\n\n        this._settings = await WebRTCModule.mediaStreamTrackApplyConstraints(this.id, normalized.video);\n        this._constraints = constraints ?? {};\n    }\n\n    clone(): MediaStreamTrack {\n        if (this.remote) {\n            throw new Error('clone is not implemented for remote tracks');\n        }\n\n        const id = WebRTCModule.mediaStreamTrackClone(this.id);\n\n        return new MediaStreamTrack({\n            id,\n            kind: this.kind,\n            remote: this.remote,\n            constraints: deepClone(this._constraints),\n            enabled: this._enabled,\n            settings: deepClone(this._settings),\n            peerConnectionId: this._peerConnectionId,\n            readyState: this._readyState,\n        });\n    }\n\n    getCapabilities(): never {\n        throw new Error('Not implemented.');\n    }\n\n    getConstraints() {\n        return deepClone(this._constraints);\n    }\n\n    getSettings(): MediaTrackSettings {\n        return deepClone(this._settings);\n    }\n\n    _registerEvents(): void {\n        addListener(this, 'mediaStreamTrackEnded', (ev: any) => {\n            if (ev.trackId !== this.id || this._readyState === 'ended') {\n                return;\n            }\n\n            log.debug(`${this.id} mediaStreamTrackEnded`);\n            this._readyState = 'ended';\n\n            this.dispatchEvent(new Event('ended'));\n        });\n\n        // Add dimension change listener for local video tracks\n        if (this.kind === 'video') {\n            addListener(this, 'videoTrackDimensionChanged', (ev: any) => {\n                // Only handle local tracks (pcId === -1) and only for this track\n                if (ev.pcId !== -1 || ev.trackId !== this.id) {\n                    return;\n                }\n\n                this._setVideoTrackDimensions(ev.width, ev.height);\n            });\n        }\n    }\n\n    /**\n     * Processes any queued `videoTrackDimensionChanged` events for this track.\n     */\n    _processVideoTrackDimensionChangedQueue(): void {\n        const eventData = videoTrackDimensionChangedEventQueue.get(this.id);\n\n        if (!eventData) {\n            return;\n        }\n\n        this._setVideoTrackDimensions(eventData.width, eventData.height);\n\n        videoTrackDimensionChangedEventQueue.delete(this.id);\n    }\n\n    release(): void {\n        if (this.remote) {\n            return;\n        }\n\n        removeListener(this);\n        WebRTCModule.mediaStreamTrackRelease(this.id);\n\n        if (this.kind === 'video') {\n            videoTrackDimensionChangedEventQueue.delete(this.id);\n        }\n    }\n}\n\n/**\n * Define the `onxxx` event handlers.\n */\nconst proto = MediaStreamTrack.prototype;\n\ndefineEventAttribute(proto, 'ended');\ndefineEventAttribute(proto, 'mute');\ndefineEventAttribute(proto, 'unmute');\n"],"mappings":"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","ignoreList":[]}